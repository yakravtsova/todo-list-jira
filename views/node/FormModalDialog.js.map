{"version":3,"sources":["../src/features/projects/projectSlice.js","FormModalDialog.jsx"],"names":["_toolkit","require","initialState","loading","projects","error","fetchProjects","createAsyncThunk","fetch","method","then","res","json","values","map","value","label","name","key","catch","err","console","exports","projectSlice","createSlice","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","_default","reducer","default","_react","_interopRequireWildcard","_standardButton","_interopRequireDefault","_checkbox","_modalDialog","_select","_textfield","_form","_reactRedux","_projectSlice","_excluded","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","FormModalDialog","isOpen","setIsOpen","useState","open","close","dispatch","useDispatch","project","useSelector","useEffect","onSubmit","e","preventDefault","createElement","Fragment","appearance","onClick","ModalTransition","onClose","ModalHeader","ModalTitle","ModalBody","Field","defaultValue","_ref","fieldProps","id","rest","inputId","options","ModalFooter","type"],"mappings":"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","file":"FormModalDialog.js","sourceRoot":"..","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: false,\n  projects: [],\n  error: '',\n};\n\nexport const fetchProjects = createAsyncThunk('project/fetchProjects', async () => {\n  return await fetch('/projects', {\n    method: \"GET\",\n    'Accept': 'application/json',\n    })\n    .then(res => {\n      return res.json();\n    })\n    .then(res => {\n      return res.values.map(value => {\n        return {label: value.name, value: value.key}\n      });\n    })\n    .catch(err => console.error(err))\n    }\n)\n\nexport const projectSlice = createSlice({\n    name: 'project',\n    initialState,\n    extraReducers: (builder) => {\n        builder.addCase(fetchProjects.pending, (state) => {\n            state.loading = true;\n        });\n        builder.addCase(fetchProjects.fulfilled, (state, action) => {\n            state.loading = false;\n            state.projects = action.payload;\n            state.error = '';\n        });\n        builder.addCase(fetchProjects.rejected, (state, action) => {\n            state.loading = false;\n            state.projects = [];\n            state.error = action.error.message;\n        });\n    }\n});\n\nexport default projectSlice.reducer","import React, {useState, useEffect, useCallback, Fragment} from 'react';\n\nimport Button from '@atlaskit/button/standard-button';\nimport { Checkbox } from '@atlaskit/checkbox';\nimport Modal, {\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  ModalTitle,\n  ModalTransition,\n} from '@atlaskit/modal-dialog';\nimport Select, {\n  components,\n  OptionProps,\n  SingleValueProps,\n} from '@atlaskit/select';\nimport Textfield from '@atlaskit/textfield';\nimport Form, { CheckboxField, Field } from '@atlaskit/form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProjects } from '../src/features/projects/projectSlice';\n\nconst FormModalDialog = () => {\n    const [isOpen, setIsOpen] = useState(false);\n  \n    const open = () => setIsOpen(true);\n    const close = () => setIsOpen(false);\n\n    const dispatch = useDispatch();\n    const project = useSelector(state => state.project);\n\n    useEffect(() => {\n      dispatch(fetchProjects());\n    }, []);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n      };\n  \n    return (\n      <>\n      <Button appearance=\"primary\" onClick={open}>\n        Open modal\n      </Button>\n\n      <ModalTransition>\n        {isOpen && (\n          <Modal onClose={close}>\n            <form onSubmit={onSubmit}>\n              <ModalHeader>\n                <ModalTitle>Create a user</ModalTitle>\n              </ModalHeader>\n              <ModalBody>\n                <Field\n                  name=\"icecream\"\n                  label=\"Select a flavor\"\n                  defaultValue={[]}\n                >\n                  {({ fieldProps: { id, ...rest }, error }) => (\n                  <Fragment>\n                    <Select inputId={id} {...rest} options={project.projects} />\n                  </Fragment>\n                  )}\n                </Field>\n              </ModalBody>\n              <ModalFooter>\n                <Button appearance=\"subtle\" onClick={close}>\n                  Close\n                </Button>\n                <Button appearance=\"primary\" type=\"submit\">\n                  Create\n                </Button>\n              </ModalFooter>\n            </form>\n          </Modal>\n        )}\n      </ModalTransition>\n    </>\n    );\n  };\n  \n  export default FormModalDialog;"]}