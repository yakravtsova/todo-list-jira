{"version":3,"sources":["../src/features/issues/issueSlice.js","../src/features/projects/projectSlice.js","SearchForm.jsx","App.jsx"],"names":["_toolkit","require","initialState","loading","issues","error","isData","fetchIssuesByQuery","createAsyncThunk","query","fetch","method","then","res","json","map","issue","fields","creator","id","avatar","avatarUrls","name","displayName","summary","status","updated","project","isChecked","catch","err","console","exports","issueSlice","createSlice","reducers","deleteIssue","state","action","filter","i","payload","checkIssue","index","element","splice","extraReducers","builder","addCase","pending","fulfilled","Boolean","length","rejected","message","actions","_default","reducer","default","projects","fetchProjects","values","value","label","key","projectSlice","_react","_interopRequireWildcard","_buttonGroup","_interopRequireDefault","_standardButton","_select","_form","_reactRedux","_projectSlice","_issueSlice","_excluded","_excluded2","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","arguments","source","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","SearchForm","dispatch","useDispatch","useSelector","useEffect","handleSubmit","data","queryString","params","p","join","createElement","style","display","width","margin","flexDirection","onSubmit","formProps","FormHeader","title","Field","defaultValue","_ref","fieldProps","rest","Fragment","inputId","options","isMulti","_ref2","FormFooter","appearance","type","_dynamicTable","_checkbox","_trash","_badge","_SearchForm","App","highlightedRows","setHighlightedRows","useState","rows","forEach","cells","content","alignItems","gap","src","borderRadius","Checkbox","onChange","testId","iconBefore","size","onClick","caption","head","padding","boxSizing","rowsPerPage","defaultPage","loadingSpinnerSize","isLoading","emptyView","highlightedRowIndex"],"mappings":"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","file":"App.js","sourceRoot":"..","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    loading: true,\n    issues: [],\n    error: '',\n    isData: true\n};\n\nexport const fetchIssuesByQuery = createAsyncThunk('issue/fetchIssuesByQuery', async (query) => {\n    return await fetch(`/search?jql=${query}`, {\n        method: \"GET\",\n        'Accept': 'application/json'\n      })\n      .then(res => {\n        return res.json();\n      })\n      .then(res => {\n        return res.issues.map(issue => {\n            const fields = issue.fields;\n            const creator = fields.creator;\n            return {\n                id: issue.id,\n                avatar: creator.avatarUrls,\n                name: creator.displayName,\n                summary: fields.summary,\n                status: fields.status.name,\n                updated: fields.updated,\n                project: fields.project.name,\n                isChecked: false\n            }\n        })\n      })\n      .catch(err => console.error(err))\n    \n}\n)\n\nexport const issueSlice = createSlice({\n    name: 'issue',\n    initialState,\n    reducers: {\n        deleteIssue: (state, action) => {\n            state.issues = state.issues.filter(i => i.id !== action.payload);\n        },\n        checkIssue: (state, action) => {\n            const index = action.payload;\n            const element = state.issues.splice(index, 1)[0];\n            element.isChecked = !element.isChecked;\n            state.issues = element.isChecked ? [...state.issues, element] : [element, ...state.issues];\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchIssuesByQuery.pending, (state) => {\n            state.loading = true;\n        });\n        builder.addCase(fetchIssuesByQuery.fulfilled, (state, action) => {\n            state.loading = false;\n            state.issues = action.payload;\n            state.error = '';\n            state.isData = Boolean(action.payload.length);\n        });\n        builder.addCase(fetchIssuesByQuery.rejected, (state, action) => {\n            state.loading = false;\n            state.issues = [];\n            state.error = action.error.message;\n            state.isData = true;\n        });\n    }\n});\n\nexport const {deleteIssue, checkIssue} = issueSlice.actions;\nexport default issueSlice.reducer","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: true,\n  projects: [],\n  error: '',\n};\n\nexport const fetchProjects = createAsyncThunk('project/fetchProjects', async () => {\n  return await fetch('/projects', {\n    method: \"GET\",\n    'Accept': 'application/json',\n    })\n    .then(res => {\n      return res.json();\n    })\n    .then(res => {\n      return res.values.map(value => {\n        return {label: value.name, value: value.key}\n      });\n    })\n    .catch(err => console.error(err))\n    }\n)\n\nexport const projectSlice = createSlice({\n    name: 'project',\n    initialState,\n    extraReducers: (builder) => {\n        builder.addCase(fetchProjects.pending, (state) => {\n            state.loading = true;\n        });\n        builder.addCase(fetchProjects.fulfilled, (state, action) => {\n            state.loading = false;\n            state.projects = action.payload;\n            state.error = '';\n        });\n        builder.addCase(fetchProjects.rejected, (state, action) => {\n            state.loading = false;\n            state.projects = [];\n            state.error = action.error.message;\n        });\n    }\n});\n\nexport default projectSlice.reducer","import React, { Fragment, useEffect } from 'react';\n\nimport ButtonGroup from '@atlaskit/button/button-group';\nimport Button from '@atlaskit/button/standard-button';\nimport Select from '@atlaskit/select';\n\nimport Form, { Field, FormFooter, FormHeader } from '@atlaskit/form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProjects } from '../src/features/projects/projectSlice';\nimport { fetchIssuesByQuery } from '../src/features/issues/issueSlice';\n\n\nconst SearchForm = () => {\n\n    const dispatch = useDispatch();\n    const project = useSelector(state => state.project);\n\n    useEffect(() => {\n      dispatch(fetchProjects());\n    }, []);\n\n    const status = [\n      {label: \"Done\", value: \"Done\"},\n      {label: \"In progress\", value: \"'In Progress'\"},\n      {label: \"Test\", value: \"Test\"},\n      {label: \"To Do\", value: \"To Do\"}\n    ];\n\n    const handleSubmit = (data) => {\n      let queryString = [];\n      for (let key in data) {\n        if (data[key].length) {\n          const params = data[key].map(p => p.value).join(',');\n          queryString = [...queryString, `${key}%20in%20(${params})`];\n        }\n      }\n      queryString = queryString.length ? queryString.join('%20AND%20') : '';\n      dispatch(fetchIssuesByQuery(queryString));\n    };\n\n  return (\n      <div\n      style={{\n        display: 'flex',\n        width: '400px',\n        margin: '0 auto',\n        flexDirection: 'row',\n      }}\n    >\n      {project.loading && <div>Loading...</div>}\n      {!project.loading && <Form onSubmit={(data) => handleSubmit(data)}>\n        {({ formProps }) => (\n          <form\n            {...formProps}\n          >\n            <FormHeader\n              title=\"Выберите параметры поиска\"\n            />\n\n            <Field\n              name=\"project\"\n              label=\"Выберите проект\"\n              defaultValue={[]}\n            >\n              {({ fieldProps: { id, ...rest } }) => (\n                <Fragment>\n                  <Select inputId={id} {...rest} options={project.projects} isMulti />\n                </Fragment>\n              )}\n            </Field>\n            <Field\n              name=\"status\"\n              label=\"Выберите статус задачи\"\n              defaultValue={[]}\n            >\n              {({ fieldProps: { id, ...rest } }) => (\n                <Fragment>\n                  <Select inputId={id} {...rest} options={status} isMulti />\n                </Fragment>\n              )}\n            </Field> \n            <FormFooter>\n              <ButtonGroup>\n                <Button appearance=\"subtle\" id=\"create-repo-cancel\">\n                  Cancel\n                </Button>\n                <Button\n                  appearance=\"primary\"\n                  id=\"create-repo-button\"\n                  type=\"submit\"\n                >\n                  Create repository\n                </Button>\n              </ButtonGroup>\n            </FormFooter>\n          </form>\n        )}\n      </Form>}\n    </div>\n  );\n};\n\nexport default SearchForm;","import DynamicTable from '@atlaskit/dynamic-table';\nimport { Checkbox } from '@atlaskit/checkbox';\nimport Button from '@atlaskit/button/standard-button';\nimport TrashIcon from '@atlaskit/icon/glyph/trash';\nimport Badge from '@atlaskit/badge';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {deleteIssue, checkIssue} from '../src/features/issues/issueSlice';\n\nimport React, { useEffect, useState } from 'react';\nimport SearchForm from './SearchForm';\n\nexport default function App() {\n  const issue = useSelector(state => state.issue);\n  const dispatch = useDispatch();\n  const [highlightedRows, setHighlightedRows] = useState([]);\n\n  useEffect(() => {\n    let rows = [];\n    issue.issues.forEach((i, index) => {\n      if (i.isChecked) {\n        rows = [...rows, index]\n      }\n    });\n    setHighlightedRows(rows)\n  }, [issue.issues])\n\n    //rows with Redux data\n    const rows = issue.issues.map((issue, index) => {\n      return {\n        key : `issue-row-${issue.id}`,\n        cells : [\n          {\n            key: 'issue-row-creator',\n            content: (\n              <div style={{display:'flex',alignItems:'center',gap:'10px'}}>\n                <img src={issue.avatar['24x24']} style={{borderRadius:'50%'}}/>\n                <strong>{issue.name}</strong>\n              </div>\n            )\n          },\n          {\n            key: 'issue-row-project',\n            content: issue.project\n          },\n          {\n            key: 'issue-row-summary',\n            content: issue.summary\n          },\n          {\n            key: 'issue-row-status',\n            content: (\n            <>\n              <Badge>{issue.status}</Badge>\n              <br/>\n              <small>{issue.updated}</small>\n            </>\n            )\n          },\n          {\n            key: 'issue-row-checkbox',\n            content: (\n            <Checkbox\n              value=\"default checkbox\"\n              //label=\"Default checkbox\"\n              onChange={() => dispatch(checkIssue(index))}\n              name=\"checkbox-default\"\n              testId=\"cb-default\"\n              isChecked={issue.isChecked}\n            />\n            )\n          },\n          {\n            key: 'issue-row-delete',\n            content: (\n            <Button\n              appearance=\"subtle\"\n              iconBefore={<TrashIcon size=\"small\" />}\n              onClick={() => dispatch(deleteIssue(issue.id))}\n              ></Button>\n              )\n          }\n        ]\n      }\n    });\n\n    const caption = \"TodoList Tasks\";\n\n    const head = {\n      cells : [\n        {\n          key : 'issue-creator',\n          content : 'Creator'\n        },\n        {\n          key : 'issue-project',\n          content : 'Project'\n        },\n        {\n          key : 'issue-summary',\n          content : 'Summary'\n        },\n        {\n          key : 'issue-status',\n          content : 'Status'\n        },\n        {\n          key : 'issue-checkbox',\n          content : \"Checkbox\",\n          width : '1'\n        },\n        {\n          key : 'issue-delete',\n          content : 'Delete',\n          width : '1'\n        }\n      ]\n    };\n  \n\n  return (\n    <div style={{\n      padding : '24px',\n      //width:'98%',\n      //margin:'24px auto',\n      boxSizing : 'border-box'\n      }}>\n\n      <SearchForm />\n      {!issue.loading && issue.error ? <div>Error: {issue.error}</div> : null}\n      {!issue.loading && \n        <DynamicTable\n        caption={caption}\n        head={head}\n        rows={rows}\n        rowsPerPage={10}\n        defaultPage={1}\n        loadingSpinnerSize=\"small\"\n        isLoading={issue.loading}\n        emptyView={<h2>The table is empty and this is the empty view</h2>}\n        highlightedRowIndex={highlightedRows}\n    />}\n      \n    </div>)\n}\n"]}