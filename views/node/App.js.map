{"version":3,"sources":["../src/features/issues/issueSlice.js","../src/features/projects/projectSlice.js","SearchForm.jsx","App.jsx"],"names":["_toolkit","require","initialState","loading","issues","error","fetchIssuesByQuery","createAsyncThunk","query","fetch","method","then","res","json","map","issue","fields","creator","id","avatar","avatarUrls","name","displayName","summary","status","updated","project","isChecked","catch","err","console","exports","selectIssues","state","isFiltered","filter","i","issueSlice","createSlice","reducers","deleteIssue","action","issueId","payload","checkIssue","index","element","splice","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","_default","reducer","default","projects","fetchProjects","values","value","label","key","projectSlice","_react","_interopRequireWildcard","_buttonGroup","_interopRequireDefault","_standardButton","_select","_form","_textfield","_spinner","_reactRedux","_projectSlice","_issueSlice","_excluded","_excluded2","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","arguments","length","source","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","SearchForm","setIsFirstSearch","setIssuesPerPage","dispatch","useDispatch","useSelector","useEffect","handleSubmit","data","issuesPerPage","queryString","params","p","join","validate","createElement","style","display","width","margin","justifyContent","alignItems","minHeight","interactionName","size","onSubmit","formProps","reset","noValidate","FormHeader","title","Field","defaultValue","_ref","fieldProps","rest","Fragment","inputId","options","isMulti","_ref2","type","min","max","ErrorMessage","FormFooter","appearance","onClick","_dynamicTable","_checkbox","_trash","_badge","_filter","_SearchForm","App","highlightedRows","setHighlightedRows","useState","setIsFiltered","issuesList","isFirstSearch","handleSetIssuesPerPage","number","handleSetIsFirstSearch","rows","forEach","handleFilter","cells","content","gap","src","borderRadius","Checkbox","onChange","testId","iconBefore","caption","head","buttonAppearance","buttonCaption","padding","boxSizing","iconAfter","rowsPerPage","defaultPage","loadingSpinnerSize","isLoading","emptyView","highlightedRowIndex"],"mappings":"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","file":"App.js","sourceRoot":"..","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    loading: false,\n    issues: [],\n    error: ''\n};\n\nexport const fetchIssuesByQuery = createAsyncThunk('issue/fetchIssuesByQuery', async (query) => {\n    return await fetch(`/search?jql=${query}`, {\n        method: \"GET\",\n        'Accept': 'application/json'\n      })\n      .then(res => {\n        return res.json();\n      })\n      .then(res => {\n        return res.issues.map(issue => {\n            const fields = issue.fields;\n            const creator = fields.creator;\n            return {\n                id: issue.id,\n                avatar: creator.avatarUrls,\n                name: creator.displayName,\n                summary: fields.summary,\n                status: fields.status.name,\n                updated: fields.updated,\n                project: fields.project.name,\n                isChecked: false\n            }\n        })\n      })\n      .catch(err => console.error(err))\n    \n}\n);\n\nexport const selectIssues = (state, isFiltered) => {\n    if (isFiltered) {\n        return state.issues.filter(i => !i.isChecked)\n    }\n    return state.issues;\n};\n\nexport const issueSlice = createSlice({\n    name: 'issue',\n    initialState,\n    reducers: {\n        deleteIssue: (state, action) => {\n            const issueId = action.payload;\n            state.issues = state.issues.filter(i => i.id !== issueId);\n        },\n        checkIssue: (state, action) => {\n            const index = action.payload;\n            const element = state.issues.splice(index, 1)[0];\n            element.isChecked = !element.isChecked;\n            state.issues = element.isChecked ? [...state.issues, element] : [element, ...state.issues];\n        },\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchIssuesByQuery.pending, (state) => {\n            state.loading = true;\n        });\n        builder.addCase(fetchIssuesByQuery.fulfilled, (state, action) => {\n            state.loading = false;\n            state.issues = action.payload;\n            state.error = '';\n        });\n        builder.addCase(fetchIssuesByQuery.rejected, (state, action) => {\n            state.loading = false;\n            state.issues = [];\n            state.error = action.error.message;\n        });\n    }\n});\n\nexport const {deleteIssue, checkIssue} = issueSlice.actions;\nexport default issueSlice.reducer","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: true,\n  projects: [],\n  error: '',\n};\n\nexport const fetchProjects = createAsyncThunk('project/fetchProjects', async () => {\n  return await fetch('/projects', {\n    method: \"GET\",\n    'Accept': 'application/json',\n    })\n    .then(res => {\n      return res.json();\n    })\n    .then(res => {\n      return res.values.map(value => {\n        return {label: value.name, value: value.key}\n      });\n    })\n    .catch(err => console.error(err))\n    }\n)\n\nexport const projectSlice = createSlice({\n    name: 'project',\n    initialState,\n    extraReducers: (builder) => {\n        builder.addCase(fetchProjects.pending, (state) => {\n            state.loading = true;\n        });\n        builder.addCase(fetchProjects.fulfilled, (state, action) => {\n            state.loading = false;\n            state.projects = action.payload;\n            state.error = '';\n        });\n        builder.addCase(fetchProjects.rejected, (state, action) => {\n            state.loading = false;\n            state.projects = [];\n            state.error = action.error.message;\n        });\n    }\n});\n\nexport default projectSlice.reducer","import React, { Fragment, useEffect } from 'react';\n\nimport ButtonGroup from '@atlaskit/button/button-group';\nimport Button from '@atlaskit/button/standard-button';\nimport Select from '@atlaskit/select';\nimport Form, { Field, FormFooter, FormHeader, ErrorMessage } from '@atlaskit/form';\nimport Textfield from '@atlaskit/textfield';\nimport Spinner from '@atlaskit/spinner';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProjects } from '../src/features/projects/projectSlice';\nimport { fetchIssuesByQuery } from '../src/features/issues/issueSlice';\n\n\nconst SearchForm = ({setIsFirstSearch, setIssuesPerPage}) => {\n\n    const dispatch = useDispatch();\n    const project = useSelector(state => state.project);\n\n    useEffect(() => {\n      dispatch(fetchProjects());\n    }, []);\n\n    const status = [\n      {label: \"Done\", value: \"Done\"},\n      {label: \"In progress\", value: \"'In Progress'\"},\n      {label: \"Test\", value: \"Test\"},\n      {label: \"To Do\", value: \"'To Do'\"}\n    ];\n\n    const handleSubmit = (data) => {\n      setIsFirstSearch();\n      setIssuesPerPage(data.issuesPerPage);\n      let queryString = [];\n      for (let key in data) {\n        if (data[key].length && key !== 'issuesPerPage') {\n          const params = data[key].map(p => p.value).join(',');\n          queryString = [...queryString, `${key}%20in%20(${params})`];\n        }\n      }\n      queryString = queryString.length ? queryString.join('%20AND%20') : '';\n      dispatch(fetchIssuesByQuery(queryString));\n    };\n\n    const validate = (value) => {\n      if (value < 5) {\n        return \"LESS_THAN_FIVE\"\n      }\n      if (value > 15) {\n        return \"MORE_THAN_FIFTEEN\"\n      }\n      return;\n    }\n\n  return (\n      <div\n      style={{\n        display: 'flex',\n        width: '400px',\n        margin: '0 auto 30px',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '300px'\n      }}\n    >\n      {project.loading && <Spinner interactionName=\"load\" size=\"large\" />}\n      {!project.loading && <Form onSubmit={(data) => handleSubmit(data)}>\n        {({ formProps, reset }) => (\n          <form\n            {...formProps} noValidate\n          >\n            <FormHeader\n              title=\"Set the search parameters\"\n            />\n\n            <Field\n              name=\"project\"\n              label=\"Select a project\"\n              defaultValue={[]}\n            >\n              {({ fieldProps: { id, ...rest } }) => (\n                <Fragment>\n                  <Select inputId={id} {...rest} options={project.projects} isMulti />\n                </Fragment>\n              )}\n            </Field>\n            <Field\n              name=\"status\"\n              label=\"Select an issue status\"\n              defaultValue={[]}\n            >\n              {({ fieldProps: { id, ...rest } }) => (\n                <Fragment>\n                  <Select inputId={id} {...rest} options={status} isMulti />\n                </Fragment>\n              )}\n            </Field>\n            <Field name=\"issuesPerPage\" label=\"Number of issues per page\"  defaultValue=\"5\" validate={validate} >\n              {({ fieldProps, error }) => (\n                <Fragment>\n                  <Textfield {...fieldProps} type=\"number\" min=\"5\" max=\"15\" />\n                  {error === 'LESS_THAN_FIVE' && (\n                    <ErrorMessage>\n                      Value must be grater than or equal to 5\n                    </ErrorMessage>\n                  )}\n                  {error === 'MORE_THAN_FIFTEEN' && (\n                    <ErrorMessage>\n                      Value must be less than or equal to 15\n                    </ErrorMessage>\n                  )}\n                  </Fragment>\n                )}\n              </Field>\n            <FormFooter>\n              <ButtonGroup>\n                <Button appearance=\"subtle\" id=\"form-reset\" onClick={() => reset()}>\n                  Reset form\n                </Button>\n                <Button\n                  appearance=\"primary\"\n                  id=\"set-search-data\"\n                  type=\"submit\"\n                >\n                  Find issues\n                </Button>\n              </ButtonGroup>\n            </FormFooter>\n          </form>\n        )}\n      </Form>}\n    </div>\n  );\n};\n\nexport default SearchForm;","import DynamicTable from '@atlaskit/dynamic-table';\nimport { Checkbox } from '@atlaskit/checkbox';\nimport Button from '@atlaskit/button/standard-button';\nimport TrashIcon from '@atlaskit/icon/glyph/trash';\nimport Badge from '@atlaskit/badge';\nimport FilterIcon from '@atlaskit/icon/glyph/filter';\nimport Spinner from '@atlaskit/spinner';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteIssue, checkIssue, selectIssues } from '../src/features/issues/issueSlice';\n\nimport React, { useEffect, useState } from 'react';\nimport SearchForm from './SearchForm';\n\nexport default function App() {\n  const issue = useSelector(state => state.issue);\n  const dispatch = useDispatch();\n  const [highlightedRows, setHighlightedRows] = useState([]);\n  const [ isFiltered, setIsFiltered ] = useState(false);\n  const issuesList = useSelector(state => selectIssues(state.issue, isFiltered));\n  const [issuesPerPage, setIssuesPerPage] = useState(null);\n  const [isFirstSearch, setIsFirstSearch] = useState(true);\n\n  const handleSetIssuesPerPage = (number) => {\n    setIssuesPerPage(number);\n  }\n\n  const handleSetIsFirstSearch = () => {\n    setIsFirstSearch(false);\n  }\n\n  useEffect(() => {\n    let rows = [];\n    issue.issues.forEach((i, index) => {\n      if (i.isChecked) {\n        rows = [...rows, index]\n      }\n    });\n    setHighlightedRows(rows)\n  }, [issue.issues]);\n\n  const handleFilter = () => {\n    setIsFiltered(!isFiltered);\n  }\n\n    //rows with Redux data\n    const rows = issuesList.map((issue, index) => {\n      return {\n        key : `issue-row-${issue.id}`,\n        cells : [\n          {\n            key: 'issue-row-creator',\n            content: (\n              <div style={{display:'flex',alignItems:'center',gap:'10px'}}>\n                <img src={issue.avatar['24x24']} style={{borderRadius:'50%'}}/>\n                <strong>{issue.name}</strong>\n              </div>\n            )\n          },\n          {\n            key: 'issue-row-project',\n            content: issue.project\n          },\n          {\n            key: 'issue-row-summary',\n            content: issue.summary\n          },\n          {\n            key: 'issue-row-status',\n            content: (\n            <>\n              <Badge>{issue.status}</Badge>\n              <br/>\n              <small>{issue.updated}</small>\n            </>\n            )\n          },\n          {\n            key: 'issue-row-checkbox',\n            content: (\n            <Checkbox\n              value=\"default checkbox\"\n              //label=\"Default checkbox\"\n              onChange={() => dispatch(checkIssue(index))}\n              name=\"checkbox-default\"\n              testId=\"cb-default\"\n              isChecked={issue.isChecked}\n            />\n            )\n          },\n          {\n            key: 'issue-row-delete',\n            content: (\n            <Button\n              appearance=\"subtle\"\n              iconBefore={<TrashIcon size=\"small\" />}\n              onClick={() => dispatch(deleteIssue(issue.id))}\n              ></Button>\n              )\n          }\n        ]\n      }\n    });\n\n    const caption = \"TodoList Tasks\";\n\n    const head = {\n      cells : [\n        {\n          key : 'issue-creator',\n          content : 'Creator'\n        },\n        {\n          key : 'issue-project',\n          content : 'Project'\n        },\n        {\n          key : 'issue-summary',\n          content : 'Summary'\n        },\n        {\n          key : 'issue-status',\n          content : 'Status'\n        },\n        {\n          key : 'issue-checkbox',\n          content : \"Checkbox\",\n          width : '1'\n        },\n        {\n          key : 'issue-delete',\n          content : 'Delete',\n          width : '1'\n        }\n      ]\n    };\n\n    const buttonAppearance = isFiltered ? 'link' : 'subtle-link';\n    const buttonCaption = isFiltered ? 'Unfilter' : 'Filter';\n  \n\n  return (\n    <div style={{\n      padding : '24px',\n      minHeight: '300px',\n      margin:'0 auto',\n      boxSizing : 'border-box'\n      }}>\n\n      <SearchForm setIssuesPerPage={handleSetIssuesPerPage} setIsFirstSearch={handleSetIsFirstSearch} />\n      {!issue.loading && issue.error ? <div>Error: {issue.error}</div> : null}\n      {!isFirstSearch && \n        <>\n        <div style={{display: 'flex', justifyContent: 'space-between'}}>\n          <h2>TodoList Tasks</h2>\n          <Button \n            onClick={handleFilter}\n            iconAfter={<FilterIcon />}\n            appearance={buttonAppearance}>\n              {buttonCaption}\n          </Button>\n        </div>\n          <DynamicTable\n            head={head}\n            rows={rows}\n            rowsPerPage={issuesPerPage}\n            defaultPage={1}\n            loadingSpinnerSize=\"small\"\n            isLoading={issue.loading}\n            emptyView={<h2>Nothing found</h2>}\n            highlightedRowIndex={highlightedRows}\n          />\n        </>\n        }\n      \n    </div>)\n}\n"]}