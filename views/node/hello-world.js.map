{"version":3,"sources":["formDefault.jsx","hello-world.jsx"],"names":["_react","_interopRequireWildcard","require","_buttonGroup","_interopRequireDefault","_loadingButton","_standardButton","_checkbox","_textfield","_select","_form","_excluded","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","i","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","propertyIsEnumerable","sourceKeys","keys","_extends","assign","bind","arguments","apply","FormDefaultExample","createElement","style","margin","onSubmit","data","console","log","Promise","resolve","setTimeout","then","username","undefined","formProps","submitting","FormHeader","title","FormSection","Field","name","label","defaultValue","fieldProps","error","Fragment","autoComplete","HelperMessage","ErrorMessage","_ref","id","rest","isDisabled","inputId","className","classNamePrefix","options","value","placeholder","validate","valid","meta","type","dirty","ValidMessage","FormFooter","appearance","isLoading","_default","exports","_dynamicTable","_trash","_badge","_formDefault","HelloWorld","excitementLevel","setExcitementLevel","React","useState","arrOfIssues","setArrOfIssues","arrOfProjects","setArrOfProjects","useEffect","fetchData","result","fetch","method","res","json","issues","catch","err","pieceOfIssue","testRows","map","issue","index","cells","content","display","alignItems","gap","src","fields","creator","avatarUrls","borderRadius","displayName","summary","status","updated","Checkbox","testId","iconBefore","size","head","width","testRows2","padding","boxSizing","rows","rowsPerPage","defaultPage","loadingSpinnerSize"],"mappings":"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","file":"hello-world.js","sourceRoot":"..","sourcesContent":["import React, { Fragment } from 'react';\n\nimport ButtonGroup from '@atlaskit/button/button-group';\nimport LoadingButton from '@atlaskit/button/loading-button';\nimport Button from '@atlaskit/button/standard-button';\nimport { Checkbox } from '@atlaskit/checkbox';\n\nimport TextField from '@atlaskit/textfield';\nimport Select from '@atlaskit/select';\n\n\nimport Form, {\n  CheckboxField,\n  ErrorMessage,\n  Field,\n  FormFooter,\n  FormHeader,\n  FormSection,\n  HelperMessage,\n  ValidMessage,\n} from '@atlaskit/form';\n\n\nconst FormDefaultExample = () => (\n  <div\n    style={{\n      //display: 'flex',\n      //width: '400px',\n      //maxWidth: '100%',\n      margin: '0 auto',\n      //flexDirection: 'row',\n    }}\n  >\n    <Form\n      onSubmit={(data) => {\n        console.log('form data', data);\n        return new Promise((resolve) => setTimeout(resolve, 2000)).then(() =>\n          data.username === 'error' ? { username: 'IN_USE' } : undefined,\n        );\n      }}\n    >\n      {({ formProps, submitting }) => (\n        <form {...formProps}>\n          <FormHeader\n            title=\"TodoList Tasks\"\n            //description=\"* indicates a required field\"\n          />\n          <FormSection>\n            <Field\n              aria-required={true}\n              name=\"username\"\n              label=\"Username\"\n              defaultValue=\"dst12\"\n            >\n              {({ fieldProps, error }) => (\n                <Fragment>\n                  <TextField autoComplete=\"off\" {...fieldProps} />\n                  {!error && (\n                    <HelperMessage>\n                      You can use letters, numbers and periods.\n                    </HelperMessage>\n                  )}\n                  {error && (\n                    <ErrorMessage>\n                      This username is already in use, try another one.\n                    </ErrorMessage>\n                  )}\n                </Fragment>\n              )}\n            </Field>\n\n            <Field\n              aria-required={true}\n              name=\"selector\"\n            >\n              {({ fieldProps: {id, ...rest}, error }) => (\n                <Fragment>\n                  <Select\n                  {...rest}\n                  isDisabled={false}\n                    inputId=\"single-select-example\"\n                    className=\"single-select\"\n                    classNamePrefix=\"react-select\"\n                    options={[\n                      { label: 'Adelaide', value: 'adelaide' },\n                      { label: 'Brisbane', value: 'brisbane' },\n                      { label: 'Canberra', value: 'canberra' },\n                      { label: 'Darwin', value: 'darwin' },\n                      { label: 'Hobart', value: 'hobart' },\n                      { label: 'Melbourne', value: 'melbourne' },\n                      { label: 'Perth', value: 'perth' },\n                      { label: 'Sydney', value: 'sydney' },\n                    ]}\n                    placeholder=\"Choose a city\"\n                  />\n                </Fragment>\n              )}\n            \n            </Field>\n            \n\n            <Field\n              aria-required={true}\n              name=\"password\"\n              label=\"Password\"\n              defaultValue=\"\"\n              //isRequired\n              validate={(value) =>\n                value && value.length < 8 ? 'TOO_SHORT' : undefined\n              }\n            >\n              {({ fieldProps, error, valid, meta }) => {\n                return (\n                  <Fragment>\n                    <TextField type=\"password\" {...fieldProps} />\n                    {error && !valid && (\n                      <HelperMessage>\n                        Use 8 or more characters with a mix of letters, numbers\n                        and symbols.\n                      </HelperMessage>\n                    )}\n                    {error && (\n                      <ErrorMessage>\n                        Password needs to be more than 8 characters.\n                      </ErrorMessage>\n                    )}\n                    {valid && meta.dirty ? (\n                      <ValidMessage>Awesome password!</ValidMessage>\n                    ) : null}\n                  </Fragment>\n                );\n              }}\n            </Field>\n          </FormSection>\n\n          <FormFooter>\n            <ButtonGroup>\n              <Button appearance=\"subtle\">Cancel</Button>\n              <LoadingButton\n                type=\"submit\"\n                appearance=\"primary\"\n                isLoading={submitting}\n              >\n                Sign up\n              </LoadingButton>\n            </ButtonGroup>\n          </FormFooter>\n        </form>\n      )}\n    </Form>\n  </div>\n);\n\nexport default FormDefaultExample;","import DynamicTable from '@atlaskit/dynamic-table';\nimport { Checkbox } from '@atlaskit/checkbox';\nimport Button from '@atlaskit/button/standard-button';\nimport TrashIcon from '@atlaskit/icon/glyph/trash';\nimport Badge from '@atlaskit/badge';\nimport FormDefaultExample from './formDefault';\n\nimport React, { useState, useEffect } from 'react';\n\nexport default function HelloWorld() {\n  const [excitementLevel, setExcitementLevel] = React.useState(0);\n  const [arrOfIssues, setArrOfIssues] = useState([]);\n  const [arrOfProjects, setArrOfProjects] = useState([]);\n\n  useEffect(() => {\n    async function fetchData(){\n      const result = await fetch('/issue', {\n        method: \"GET\",\n        'Accept': 'application/json',\n      })\n      .then(res => {\n        return res.json();\n      })\n      .then(res => {\n        setArrOfIssues(res.issues);\n      })\n      .catch(err => console.error(err))\n    \n    }\n    fetchData();\n  }, []);\n\n  // useEffect(() => {\n  //   async function fetchData(){\n  //     const result = await fetch('/projects', {\n  //       method: \"GET\",\n  //       'Accept': 'application/json',\n  //     })\n  //     .then(res => {\n  //       return res.json();\n  //     })\n  //     .then(res => {\n  //       setArrOfProjects(res.values);\n  //     })\n  //     .catch(err => console.error(err))\n    \n  //   }\n  //   fetchData();\n  // }, []);\n\n    const pieceOfIssue = () => {\n      return(\n        <div></div>\n      );\n    }\n\n    const testRows = arrOfIssues.map((issue,index) => {\n      return {\n        key : `issue-row-${index}`,\n        cells : [\n          {\n            key: 'issue-row-creator',\n            content: (\n              <div style={{display:'flex',alignItems:'center',gap:'10px'}}>\n                <img src={issue.fields.creator.avatarUrls['24x24']} style={{borderRadius:'50%'}}/>\n                <strong>{issue.fields.creator.displayName}</strong>\n              </div>\n            )\n          },\n          {\n            key: 'issue-row-summary',\n            content: issue.fields.summary\n          },\n          {\n            key: 'issue-row-status',\n            content: (\n            <>\n              <Badge>{issue.fields.status.name}</Badge>\n              <br/>\n              <small>{issue.fields.updated}</small>\n            </>\n            )\n          },\n          {\n            key: 'issue-row-checkbox',\n            content: (\n            <Checkbox\n              value=\"default checkbox\"\n              //label=\"Default checkbox\"\n              //onChange={}\n              name=\"checkbox-default\"\n              testId=\"cb-default\"\n            />\n            )\n          },\n          {\n            key: 'issue-row-delete',\n            content: (\n            <Button\n              appearance=\"subtle\"\n              iconBefore={<TrashIcon size=\"small\" />}\n              //onClick={}\n              ></Button>\n              )\n          }\n        ]\n      }\n    });\n\n    const head = {\n      cells : [\n        {\n          key : 'issue-summary',\n          content : 'Summary'\n        },\n        {\n          key : 'issue-creator',\n          content : 'Creator'\n        },\n        {\n          key : 'issue-status',\n          content : 'Status'\n        },\n        {\n          key : 'issue-checkbox',\n          content : \"Checkbox\",\n          width : '1'\n        },\n        {\n          key : 'issue-delete',\n          content : 'Delete',\n          width : '1'\n        }\n      ]\n    };\n\n    const testRows2 = [\n      {\n        key : `issue-row-1`,\n        cells : [\n          {\n            key: 'issue-row-creator',\n            content: (\n              <div style={{display:'flex',alignItems:'center',gap:'10px'}}>\n                \n                <strong>issue.fields.creator.displayName</strong>\n              </div>\n            )\n          },\n          {\n            key: 'issue-row-summary',\n            content: 'issue.fields.summary'\n          },\n          {\n            key: 'issue-row-status',\n            content: (\n            <>\n              <Badge>issue.fields.status.name</Badge>\n              <br/>\n              <small>issue.fields.updated</small>\n            </>\n            )\n          },\n          {\n            key: 'issue-row-checkbox',\n            content: (\n            <Checkbox\n              value=\"default checkbox\"\n              //label=\"Default checkbox\"\n              //onChange={}\n              name=\"checkbox-default\"\n              testId=\"cb-default\"\n            />\n            )\n          },\n          {\n            key: 'issue-row-delete',\n            content: (\n            <Button\n              appearance=\"subtle\"\n              iconBefore={<TrashIcon size=\"small\" />}\n              //onClick={}\n              ></Button>\n              )\n          }\n        ]\n      }\n    ]\n  \n\n  return (\n    <div style={{\n      padding : '24px',\n      //width:'98%',\n      //margin:'24px auto',\n      boxSizing : 'border-box'\n      }}>\n\n        <div>&nbsp;</div>\n\n        {/* <FormDefaultExample /> */}\n\n      <div>&nbsp;</div>\n      <h1>TodoList Tasks</h1>\n      <div>&nbsp;</div>\n\n      \n\n      <div>&nbsp;</div>\n\n      <DynamicTable\n        head={head}\n        rows={testRows}\n        rowsPerPage={5}\n        defaultPage={1}\n        loadingSpinnerSize=\"small\"\n        //isLoading\n      />\n    </div>)\n}\n"]}