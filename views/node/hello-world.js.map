{"version":3,"sources":["../src/features/issues/issueSlice.js","../src/features/projects/projectSlice.js","../src/features/statuses/statusSlice.js","SearchForm.jsx","App.jsx","../src/app/store.js","hello-world.jsx"],"names":["_toolkit","require","initialState","loading","issues","error","fetchIssuesByQuery","createAsyncThunk","query","jwt","AP","context","getToken","then","token","fetch","method","res","json","map","issue","fields","creator","id","avatar","avatarUrls","name","displayName","summary","status","updated","project","isChecked","catch","err","console","exports","deleteIssueById","issueId","selectIssues","state","isFiltered","filter","i","issueSlice","createSlice","reducers","checkIssue","action","index","payload","element","splice","extraReducers","builder","addCase","pending","fulfilled","rejected","message","deleteIssue","actions","_default","reducer","default","projects","fetchProjects","result","headers","values","value","label","key","projectSlice","statuses","fetchStatuses","statusSlice","_react","_interopRequireWildcard","_buttonGroup","_interopRequireDefault","_standardButton","_select","_form","_textfield","_spinner","_inlineMessage","_reactRedux","_projectSlice","_statusSlice","_issueSlice","_excluded","_excluded2","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","arguments","length","source","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","SearchForm","setIsFirstSearch","dispatch","useDispatch","useSelector","useEffect","handleSubmit","data","queryString","params","p","join","issuesPerPage","validate","createElement","style","display","width","margin","justifyContent","alignItems","minHeight","interactionName","size","appearance","title","onSubmit","formProps","reset","noValidate","FormHeader","Field","defaultValue","_ref","fieldProps","rest","Fragment","inputId","options","isMulti","_ref2","type","min","max","ErrorMessage","FormFooter","onClick","_dynamicTable","_checkbox","_trash","_badge","_filter","_SearchForm","App","highlightedRows","setHighlightedRows","useState","setIsFiltered","issuesList","isFirstSearch","handleSetIsFirstSearch","rows","forEach","handleFilter","cells","content","gap","src","borderRadius","Checkbox","onChange","testId","iconBefore","head","buttonAppearance","buttonCaption","padding","boxSizing","iconAfter","defaultPage","loadingSpinnerSize","isLoading","emptyView","highlightedRowIndex","store","configureStore","issueReducer","_App","_store","HelloWorld","Provider"],"mappings":"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","file":"hello-world.js","sourceRoot":"..","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    loading: false,\n    issues: [],\n    error: ''\n};\n\nexport const fetchIssuesByQuery = createAsyncThunk('issue/fetchIssuesByQuery', async (query) => {\n    const jwt = await AP.context.getToken()\n    .then((token) => {\n      return token\n    });\n    \n    return await fetch(`/search?${query}&jwt=${jwt}`, {\n        method: \"GET\",\n        'Accept': 'application/json'\n      })\n      .then(res => {\n        return res.json();\n      })\n      .then(res => {\n        return res.issues.map(issue => {\n            const fields = issue.fields;\n            const creator = fields.creator;\n            return {\n                id: issue.id,\n                avatar: creator.avatarUrls,\n                name: creator.displayName,\n                summary: fields.summary,\n                status: fields.status.name,\n                updated: fields.updated,\n                project: fields.project.name,\n                isChecked: false\n            }\n        })\n      })\n      .catch(err => console.error(err))\n}\n);\n\nexport const deleteIssueById = createAsyncThunk('issue/deleteIssueById', async (issueId) => {\n    const jwt = await AP.context.getToken()\n    .then((token) => {\n      return token\n    });\n    \n    return await fetch(`/issue/${issueId}?jwt=${jwt}`, {\n        method: \"DELETE\",\n        'Accept': 'application/json'\n      })\n      .then(res => {\n        return issueId;\n      })\n      .catch(err => console.error(err))\n}\n);\n\nexport const selectIssues = (state, isFiltered) => {\n    if (isFiltered) {\n        return state.issues.filter(i => !i.isChecked)\n    }\n    return state.issues;\n};\n\nexport const issueSlice = createSlice({\n    name: 'issue',\n    initialState,\n    reducers: {\n        checkIssue: (state, action) => {\n            const index = action.payload;\n            const element = state.issues.splice(index, 1)[0];\n            element.isChecked = !element.isChecked;\n            state.issues = element.isChecked ? [...state.issues, element] : [element, ...state.issues];\n        },\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchIssuesByQuery.pending, (state) => {\n            state.loading = true;\n        });\n        builder.addCase(fetchIssuesByQuery.fulfilled, (state, action) => {\n            state.loading = false;\n            state.issues = action.payload;\n            state.error = '';\n        });\n        builder.addCase(fetchIssuesByQuery.rejected, (state, action) => {\n            state.loading = false;\n            state.issues = [];\n            state.error = action.error.message;\n        });\n        builder.addCase(deleteIssueById.pending, (state) => {\n            state.loading = true;\n        });\n        builder.addCase(deleteIssueById.fulfilled, (state, action) => {\n            state.loading = false;\n            state.issues = state.issues = state.issues.filter(i => i.id !== action.payload);\n            state.error = '';\n        });\n        builder.addCase(deleteIssueById.rejected, (state, action) => {\n            state.loading = false;\n            state.error = action.error.message;\n        });\n    }\n});\n\nexport const {deleteIssue, checkIssue} = issueSlice.actions;\nexport default issueSlice.reducer","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: true,\n  projects: [],\n  error: '',\n};\n\nexport const fetchProjects = createAsyncThunk('project/fetchProjects', async () => {\n  const jwt = await AP.context.getToken()\n    .then((token) => {\n      return token\n    });\n    const result = await fetch(`/projects?jwt=${jwt}`, {\n      method: \"GET\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      })\n      .then(res => {\n        return res.json();\n      })\n      .then(res => {\n        return res.values.map(value => {\n          return {label: value.name, value: value.key}\n        });\n      })\n      .catch(err => console.error(err))\n      return result;\n    }\n)\n\nexport const projectSlice = createSlice({\n    name: 'project',\n    initialState,\n    extraReducers: (builder) => {\n        builder.addCase(fetchProjects.pending, (state) => {\n            state.loading = true;\n        });\n        builder.addCase(fetchProjects.fulfilled, (state, action) => {\n            state.loading = false;\n            state.projects = action.payload;\n            state.error = '';\n        });\n        builder.addCase(fetchProjects.rejected, (state, action) => {\n            state.loading = false;\n            state.projects = [];\n            state.error = action.error.message;\n        });\n    }\n});\n\nexport default projectSlice.reducer","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  loading: true,\n  statuses: [],\n  error: '',\n};\n\nexport const fetchStatuses = createAsyncThunk('status/fetchStatuses', async () => {\n  const jwt = await AP.context.getToken()\n    .then((token) => {\n      return token\n    });\n    const result = await fetch(`/statuses?jwt=${jwt}`, {\n      method: \"GET\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      })\n      .then(res => {\n        return res.json();\n      })\n      .then(res => {\n        return res.map(value => {\n          return {label: value.name, value: `'${value.name}'`}\n        });\n      })\n      .catch(err => console.error(err))\n      return result;\n    }\n)\n\nexport const statusSlice = createSlice({\n    name: 'status',\n    initialState,\n    extraReducers: (builder) => {\n        builder.addCase(fetchStatuses.pending, (state) => {\n            state.loading = true;\n        });\n        builder.addCase(fetchStatuses.fulfilled, (state, action) => {\n            state.loading = false;\n            state.statuses = action.payload;\n            state.error = '';\n        });\n        builder.addCase(fetchStatuses.rejected, (state, action) => {\n            state.loading = false;\n            state.statuses = [];\n            state.error = action.error.message;\n        });\n    }\n});\n\nexport default statusSlice.reducer","import React, { Fragment, useEffect } from 'react';\n\nimport ButtonGroup from '@atlaskit/button/button-group';\nimport Button from '@atlaskit/button/standard-button';\nimport Select from '@atlaskit/select';\nimport Form, { Field, FormFooter, FormHeader, ErrorMessage } from '@atlaskit/form';\nimport Textfield from '@atlaskit/textfield';\nimport Spinner from '@atlaskit/spinner';\nimport InlineMessage from '@atlaskit/inline-message';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProjects } from '../src/features/projects/projectSlice';\nimport { fetchStatuses } from '../src/features/statuses/statusSlice';\nimport { fetchIssuesByQuery } from '../src/features/issues/issueSlice';\n\n\nconst SearchForm = ({setIsFirstSearch}) => {\n\n    const dispatch = useDispatch();\n    const project = useSelector(state => state.project);\n    const status = useSelector(state => state.status);\n\n    useEffect(() => {\n      dispatch(fetchStatuses());\n      dispatch(fetchProjects());\n    }, []);\n\n    const handleSubmit = (data) => {\n      setIsFirstSearch();\n      let queryString = [];\n      for (let key in data) {\n        if (data[key].length && key !== 'issuesPerPage') {\n          const params = data[key].map(p => p.value).join(',');\n          queryString = [...queryString, `${key}%20in%20(${params})`];\n        }\n      }\n      queryString = queryString.length ? `jql=${queryString.join('%20AND%20')}&maxResults=${data.issuesPerPage}` : `maxResults=${data.issuesPerPage}`;\n      dispatch(fetchIssuesByQuery(queryString));\n    };\n\n    const validate = (value) => {\n      if (value < 1) {\n        return \"LESS_THAN_ONE\"\n      }\n      if (value > 200) {\n        return \"MORE_THAN_TWO_HUNDRED\"\n      }\n      return;\n    }\n\n  return (\n      <div\n      style={{\n        display: 'flex',\n        width: '400px',\n        margin: '0 auto 30px',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '300px'\n      }}\n    >\n      {project.loading && status.loading && <Spinner interactionName=\"load\" size=\"large\" />}\n      {(!project.loading || !status.loading) && !project.projects.length && \n        <InlineMessage appearance=\"warning\" title=\"You don't have any projects yet\"/>}\n      {(!project.loading || !status.loading) && !!project.projects.length && <Form onSubmit={(data) => handleSubmit(data)}>\n        {({ formProps, reset }) => (\n          <form\n            {...formProps} noValidate\n          >\n            <FormHeader\n              title=\"Set the search parameters\"\n            />\n\n            <Field\n              name=\"project\"\n              label=\"Select a project\"\n              defaultValue={[]}\n            >\n              {({ fieldProps: { id, ...rest } }) => (\n                <Fragment>\n                  <Select inputId={id} {...rest} options={project.projects} isMulti />\n                </Fragment>\n              )}\n            </Field>\n            <Field\n              name=\"status\"\n              label=\"Select an issue status\"\n              defaultValue={[]}\n            >\n              {({ fieldProps: { id, ...rest } }) => (\n                <Fragment>\n                  <Select inputId={id} {...rest} options={status.statuses} isMulti />\n                </Fragment>\n              )}\n            </Field>\n            <Field name=\"issuesPerPage\" label=\"Maximum number of tasks per page\"  defaultValue=\"50\" validate={validate} >\n              {({ fieldProps, error }) => (\n                <Fragment>\n                  <Textfield {...fieldProps} type=\"number\" min=\"1\" max=\"200\" />\n                  {error === 'LESS_THAN_ONE' && (\n                    <ErrorMessage>\n                      Value must be grater than or equal to 1\n                    </ErrorMessage>\n                  )}\n                  {error === 'MORE_THAN_TWO_HUNDRED' && (\n                    <ErrorMessage>\n                      Value must be less than or equal to 200\n                    </ErrorMessage>\n                  )}\n                  </Fragment>\n                )}\n              </Field>\n            <FormFooter>\n              <ButtonGroup>\n                <Button appearance=\"subtle\" id=\"form-reset\" onClick={() => reset()}>\n                  Reset form\n                </Button>\n                <Button\n                  appearance=\"primary\"\n                  id=\"set-search-data\"\n                  type=\"submit\"\n                >\n                  Find issues\n                </Button>\n              </ButtonGroup>\n            </FormFooter>\n          </form>\n        )}\n      </Form>}\n    </div>\n  );\n};\n\nexport default SearchForm;","import DynamicTable from '@atlaskit/dynamic-table';\nimport { Checkbox } from '@atlaskit/checkbox';\nimport Button from '@atlaskit/button/standard-button';\nimport TrashIcon from '@atlaskit/icon/glyph/trash';\nimport Badge from '@atlaskit/badge';\nimport FilterIcon from '@atlaskit/icon/glyph/filter';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { checkIssue, selectIssues, deleteIssueById } from '../src/features/issues/issueSlice';\n\nimport React, { useEffect, useState } from 'react';\nimport SearchForm from './SearchForm';\n\nexport default function App() {\n  const issue = useSelector(state => state.issue);\n  const dispatch = useDispatch();\n  const [highlightedRows, setHighlightedRows] = useState([]);\n  const [ isFiltered, setIsFiltered ] = useState(false);\n  const issuesList = useSelector(state => selectIssues(state.issue, isFiltered));\n  const [isFirstSearch, setIsFirstSearch] = useState(true);\n\n  const handleSetIsFirstSearch = () => {\n    setIsFirstSearch(false);\n  }\n\n  useEffect(() => {\n    let rows = [];\n    issue.issues.forEach((i, index) => {\n      if (i.isChecked) {\n        rows = [...rows, index]\n      }\n    });\n    setHighlightedRows(rows)\n  }, [issue.issues]);\n\n  const handleFilter = () => {\n    setIsFiltered(!isFiltered);\n  }\n\n  const rows = issuesList.map((issue, index) => {\n    return {\n      key : `issue-row-${issue.id}`,\n      cells : [\n        {\n          key: 'issue-row-creator',\n          content: (\n            <div style={{display:'flex',alignItems:'center',gap:'10px'}}>\n              <img src={issue.avatar['24x24']} style={{borderRadius:'50%'}}/>\n              <strong>{issue.name}</strong>\n            </div>\n          )\n        },\n        {\n          key: 'issue-row-project',\n          content: issue.project\n        },\n        {\n          key: 'issue-row-summary',\n          content: issue.summary\n        },\n        {\n          key: 'issue-row-status',\n          content: (\n          <>\n            <Badge>{issue.status}</Badge>\n            <br/>\n            <small>{issue.updated}</small>\n          </>\n          )\n        },\n        {\n          key: 'issue-row-checkbox',\n          content: (\n          <Checkbox\n            value=\"default checkbox\"\n            onChange={() => dispatch(checkIssue(index))}\n            name=\"checkbox-default\"\n            testId=\"cb-default\"\n            isChecked={issue.isChecked}\n          />\n          )\n        },\n        {\n          key: 'issue-row-delete',\n          content: (\n          <Button\n            appearance=\"subtle\"\n            iconBefore={<TrashIcon size=\"small\" />}\n            onClick={() => dispatch(deleteIssueById(issue.id))}\n            ></Button>\n            )\n        }\n      ]\n    }\n  });\n\n  const head = {\n    cells : [\n      {\n        key : 'issue-creator',\n        content : 'Creator'\n      },\n      {\n        key : 'issue-project',\n        content : 'Project'\n      },\n      {\n        key : 'issue-summary',\n        content : 'Summary'\n      },\n      {\n        key : 'issue-status',\n        content : 'Status'\n      },\n      {\n        key : 'issue-checkbox',\n        content : \"Checkbox\",\n        width : '1'\n      },\n      {\n        key : 'issue-delete',\n        content : 'Delete',\n        width : '1'\n      }\n    ]\n  };\n\n  const buttonAppearance = isFiltered ? 'link' : 'subtle-link';\n  const buttonCaption = isFiltered ? 'Unfilter' : 'Filter';\n\n\n  return (\n    <div style={{\n      padding : '24px',\n      minHeight: '300px',\n      margin:'0 auto',\n      boxSizing : 'border-box'\n      }}>\n\n      <SearchForm setIsFirstSearch={handleSetIsFirstSearch} />\n      {!issue.loading && issue.error ? <div>Error: {issue.error}</div> : null}\n      {!isFirstSearch &&\n        <>\n          <div style={{display: 'flex', justifyContent: 'space-between'}}>\n            <h2>TodoList Tasks</h2>\n            <Button\n              onClick={handleFilter}\n              iconAfter={<FilterIcon />}\n              appearance={buttonAppearance}>\n                {buttonCaption}\n            </Button>\n          </div>\n            <DynamicTable\n              head={head}\n              rows={rows}\n              defaultPage={1}\n              loadingSpinnerSize=\"small\"\n              isLoading={issue.loading}\n              emptyView={<h2>Nothing found</h2>}\n              highlightedRowIndex={highlightedRows}\n            />\n        </>\n        }\n    </div>)\n}","import {configureStore} from '@reduxjs/toolkit';\nimport issueReducer from '../features/issues/issueSlice';\nimport projectSlice from '../features/projects/projectSlice';\nimport statusSlice from '../features/statuses/statusSlice';\n\nconst store = configureStore({\n    reducer: {\n        issue: issueReducer,\n        project: projectSlice,\n        status: statusSlice\n    },\n});\n\nexport default store;","import React from 'react';\nimport App from \"./App\";\nimport store from '../src/app/store';\nimport {Provider} from 'react-redux';\n\nexport default function HelloWorld() {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n}\n"]}